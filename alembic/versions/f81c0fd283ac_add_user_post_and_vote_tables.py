"""add user, post, and vote tables

Revision ID: f81c0fd283ac
Revises: 
Create Date: 2024-11-13 11:53:17.030861

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = 'f81c0fd283ac'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('user_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('birth_date', sa.DateTime(), nullable=True),
                    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('contact', sa.BigInteger(), nullable=True),
                    sa.Column('created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('last_modified', sa.DateTime(), server_default=sa.text('NULL ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('id'),
                    sa.UniqueConstraint('user_name')
                    )
    op.create_table('posts',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('published', sa.Boolean(), server_default=sa.text('1'), nullable=False),
                    sa.Column('created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('last_modified', sa.DateTime(), server_default=sa.text('NULL ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('id')
                    )
    op.create_table('votes',
                    sa.Column('post_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('vote_type', sa.Enum('upvote', 'downvote', name='votetype'), nullable=False),
                    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('post_id', 'user_id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('votes')
    op.drop_table('posts')
    op.drop_table('users')
    # ### end Alembic commands ###
